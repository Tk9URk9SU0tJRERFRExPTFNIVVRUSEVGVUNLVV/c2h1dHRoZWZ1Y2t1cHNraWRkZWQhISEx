-- Functions to hook
local functions = {
    rconsoleprint,
    print,
    setclipboard,
    rconsoleerr,
    rconsolewarn,
    warn,
    error
}

-- Patterns to match Discord webhook URLs and raw.githubusercontent URLs
local patterns = {
    "https://discord.com/api/webhooks/",
    "https://raw.githubusercontent.com/"
}

-- Function to freeze the game
local function freezeGame()
    while true do end
end

-- Hook each function
for i, v in next, functions do
    local old
    old = hookfunction(v, newcclosure(function(...)
        local args = {...}
        for _, arg in next, args do
            for _, pattern in next, patterns do
                if tostring(arg):find(pattern) then
                    freezeGame()  -- Call freezeGame if a pattern is detected
                end
            end
        end
        return old(...)
    end))
end

-- Check for target script presence in CoreGui and freeze game if detected
local targetScriptName = "HttpSpy"  -- Change this to the name of the script you're targeting

local function detectTargetScript()
    local targetScriptInstance = game.CoreGui:FindFirstChild(targetScriptName)
    if targetScriptInstance then
        freezeGame()
    end
end

-- Check if the script has been executed through _G.ID
if _G.ID then
    freezeGame()
end

-- Loop to continuously check for the target script
while true do
    detectTargetScript()
    wait(1)  -- Check every second (adjust as needed)
end

-- Hook __newindex to monitor global variable changes
setmetatable(_G, {
    __newindex = function(t, i, v)
        if tostring(i) == "ID" then
            freezeGame()
        end
        rawset(t, i, v)
    end
})
